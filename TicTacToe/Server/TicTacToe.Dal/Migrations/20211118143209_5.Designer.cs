// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicTacToe.Dal;

#nullable disable

namespace TicTacToe.Dal.Migrations
{
    [DbContext(typeof(TicTacToeContext))]
    [Migration("20211118143209_5")]
    partial class _5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("TicTacToe.Domain.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Cells")
                        .HasColumnType("BLOB");

                    b.Property<Guid?>("CrossPlayerId")
                        .HasColumnType("TEXT");

                    b.Property<byte>("NextTurn")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Winner")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ZeroPlayerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CrossPlayerId");

                    b.HasIndex("ZeroPlayerId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("TicTacToe.Domain.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserEntity");
                });

            modelBuilder.Entity("TicTacToe.Domain.GameEntity", b =>
                {
                    b.HasOne("TicTacToe.Domain.UserEntity", "CrossPlayer")
                        .WithMany()
                        .HasForeignKey("CrossPlayerId");

                    b.HasOne("TicTacToe.Domain.UserEntity", "ZeroPlayer")
                        .WithMany()
                        .HasForeignKey("ZeroPlayerId");

                    b.Navigation("CrossPlayer");

                    b.Navigation("ZeroPlayer");
                });
#pragma warning restore 612, 618
        }
    }
}
